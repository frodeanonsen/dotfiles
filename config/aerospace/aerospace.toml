# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands

after-startup-command = []

# Started as services
#   'exec-and-forget /run/current-system/sw/bin/sketchybar',
#   'exec-and-forget /run/current-system/sw/bin/borders',
# 'exec-and-forget borders active_color=0xffe1e300 inactive_color=0xff494d64 width=6.0',

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 48

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Disabled because of fusion360
# on-focus-changed = "move-mouse window-lazy-center"

# exec-on-workspace-change callback allows to run arbitrary process when focused
# workspace changes. It may be useful for integrating with bars.
# Besides the exec.env-vars, the process has access to the following environment variables:
# AEROSPACE_FOCUSED_WORKSPACE - the workspace user switched to
# AEROSPACE_PREV_WORKSPACE - the workspace user switched from
# Notify /run/current-system/sw/bin/sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  '/run/current-system/sw/bin/sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
outer.top = [
  # offset of 32 on internal display, because of notch (16" MPB)
  { monitor.'built-in.*' = 16 },
  48,
]
outer.right = 24
outer.bottom = 24
outer.left = 24
inner.horizontal = 24
inner.vertical = 24

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# --------------------- Hyprland config ----------------------

# Close active window
alt-q = 'close'

# Kill active process (no direct equivalent, but you can reload config or close all windows)
# alt-shift-q = ['close-all-windows-but-current']

# Screen lock (replace with your macOS lock command), handled by macOS natively
# cmd-ctrl-alt-shift-l = 'exec-and-forget /System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'

# Power menu (replace with your macOS power menu or script)
alt-p = 'exec-and-forget open -a "System Preferences"'

# Notification panel (no direct equivalent)

# Apps
# Settings menu (replace with your settings app or script)
alt-enter = 'exec-and-forget open -n -a "kitty"'

# Layouts
# See: https://nikitabobko.github.io/AeroSpace/commands#layout

alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
alt-i = 'layout accordion horizontal vertical'

alt-e = 'balance-sizes'
alt-shift-m = 'fullscreen'

# Move focus with mainMod + arrow keys
alt-h = 'focus left'
alt-l = 'focus right'
alt-k = 'focus up'
alt-j = 'focus down'

# Move windows with cmd+ctrl+arrows
alt-shift-h = 'move left'
alt-shift-l = 'move right'
alt-shift-k = 'move up'
alt-shift-j = 'move down'

# Swap windows
cmd-alt-h = 'swap left'
cmd-alt-l = 'swap right'
cmd-alt-k = 'swap up'
cmd-alt-j = 'swap down'

# Resize windows with cmd+shift+arrows
cmd-shift-h = 'resize width -50'
cmd-shift-l = 'resize width +50'
cmd-shift-k = 'resize height -50'
cmd-shift-j = 'resize height +50'

# Workspaces: cmd+[1-9,0]
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 10'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# Move window to workspace silently: cmd+ctrl+[1-9,0]
ctrl-alt-shift-1 = 'move-node-to-workspace 1'
ctrl-alt-shift-2 = 'move-node-to-workspace 2'
ctrl-alt-shift-3 = 'move-node-to-workspace 3'
ctrl-alt-shift-4 = 'move-node-to-workspace 4'
ctrl-alt-shift-5 = 'move-node-to-workspace 5'
ctrl-alt-shift-6 = 'move-node-to-workspace 6'
ctrl-alt-shift-7 = 'move-node-to-workspace 7'
ctrl-alt-shift-8 = 'move-node-to-workspace 8'
ctrl-alt-shift-9 = 'move-node-to-workspace 9'
ctrl-alt-shift-0 = 'move-node-to-workspace 10'

# Move window to workspace: cmd+shift+[1-9,0]
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
alt-shift-0 = ['move-node-to-workspace 10', 'workspace 10']

# Workspace next/prev: cmd+tab / cmd+shift+tab
alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Screenshots - Handled by macOS natively
# cmd-print = 'exec-and-forget screencapture -i ~/Desktop/screenshot.png'
# cmd-shift-print = 'exec-and-forget screencapture -i ~/Desktop/screenshot_area.png'
# cmd-ctrl-print = 'exec-and-forget sleep 5 && screencapture -i ~/Desktop/screenshot_in5.png'
# cmd-ctrl-shift-print = 'exec-and-forget sleep 10 && screencapture -i ~/Desktop/screenshot_in10.png'
# alt-print = 'exec-and-forget screencapture -i ~/Desktop/screenshot_active.png'

# -END----------------- Hyprland config ----------------------

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-period = [
  'mode service',
  'exec-and-forget /run/current-system/sw/bin/sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=true',
]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
c = [
  'reload-config',
  'mode main',
  'exec-and-forget /run/current-system/sw/bin/sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
]
r = [
  'flatten-workspace-tree',
  'mode main',
  'exec-and-forget /run/current-system/sw/bin/sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# Back to 'main' mode
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
esc = [
  'mode main',
  'exec-and-forget /run/current-system/sw/bin/sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
]

# Comms
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace 9"

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace 9"

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = "move-node-to-workspace 9"

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ["move-node-to-workspace 9"]

# Obsidian
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = "move-node-to-workspace 8"


# 3d apps
[[on-window-detected]]
if.app-id = 'com.softfever3d.orca-slicer'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.bambulab.bambu-studio'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.autodesk.fusion360'
run = "move-node-to-workspace 3"
